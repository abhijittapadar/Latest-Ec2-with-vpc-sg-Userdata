version: 0.2

env:
  variables:
    TERRAFORM_VERSION: "1.10.0"
    TF_COMMAND: "apply"
  parameter-store:
    AWS_ACCESS_KEY_ID: "/CodeBuild/MY_AWS_ACCESS_KEY_ID"
    AWS_SECRET_ACCESS_KEY: "/CodeBuild/MY_AWS_SECRET_ACCESS_KEY"

phases:
  install:
    runtime-versions:
      python: 3.9
    on-failure: ABORT
    commands:
      - echo "Installing Terraform ${TERRAFORM_VERSION}..."
      - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version
      - chmod +x terraform

  pre_build:
    on-failure: ABORT
    commands:
      - echo "Terraform execution started on $(date)"
      - cd "$CODEBUILD_SRC_DIR/Latest-Ec2-with-vpc-sg-Userdata" || exit 1
      - ls -lrt

  build:
    on-failure: ABORT
    commands:
      - echo "Starting Terraform deployment..."
      - terraform init -input=false --backend-config=dev.conf
      - terraform validate
      - terraform plan -out=tfplan
      - terraform ${TF_COMMAND} -auto-approve tfplan

  post_build:
    on-failure: CONTINUE
    commands:
      - echo "Terraform execution completed on $(date)"
      - echo "Cleaning up temporary files..."
      - rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - rm -f tfplan

artifacts:
  files:
    - Latest-Ec2-with-vpc-sg-Userdata/**/*
  discard-paths: no
